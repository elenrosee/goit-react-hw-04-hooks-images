{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","Services/apiService.js","index.js"],"names":["Searchbar","state","request","handleInputChangeEvent","event","currentTarget","name","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","onChange","autoFocus","placeholder","Component","ImageGallery","children","ImageGalleryItem","images","openModal","Fragment","map","webformatURL","largeImageURL","tags","onClick","src","alt","uuid","Button","modalRoot","document","querySelector","Modal","handeleKeyDown","code","onClose","handeleBackDropClick","target","window","addEventListener","removeEventListener","createPortal","picturesApiService","searchQuery","page","fetch","then","response","ok","json","App","loading","showModal","modalImg","loadMoreBtn","toggleModal","onOpenModal","formSubmitHandler","trim","resetPage","fetchPageImages","alert","fetchImages","addImages","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","hits","length","prevState","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"0eAqDeA,E,4MAhDbC,MAAQ,CACNC,QAAS,I,EAGXC,uBAAyB,SAACC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKa,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAEN,QAAS,M,4CAG3B,WACE,OACE,wBAAQa,UAAU,YAAlB,SACE,uBAAMF,SAAUG,KAAKP,aAAcM,UAAU,aAA7C,UACE,wBAAQE,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLX,KAAK,UACLY,aAAa,MACbC,SAAUH,KAAKb,uBACfI,MAAOS,KAAKf,MAAMC,QAClBkB,WAAS,EACTC,YAAY,sC,GArCAC,aCETC,G,MAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,oBAAIT,UAAU,eAAd,SAA8BS,M,yBCiCjBC,E,4JA9Bb,WACE,MAA8BT,KAAKJ,MAA3Bc,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAChB,OACE,cAAC,IAAMC,SAAP,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,KAAhC,OACV,oBAAiBjB,UAAU,mBAA3B,SACE,qBACEkB,QAAS,kBAAMN,EAAUI,EAAeC,IACxCE,IAAKJ,EACLK,IAAKH,EACLjB,UAAU,4BALLqB,gB,GANYd,aCQhBe,G,MAVA,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAAH,OACb,wBAAQA,QAASA,EAAShB,KAAK,SAASF,UAAU,UAAlD,yBCCIuB,G,MAAYC,SAASC,cAAc,gBAuC1BC,E,4MA5BbC,eAAiB,SAAChC,GACD,WAAXA,EAAEiC,MACJ,EAAK/B,MAAMgC,W,EAIfC,qBAAuB,SAACnC,GAClBA,EAAEL,gBAAkBK,EAAEoC,QACxB,EAAKlC,MAAMgC,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAWhC,KAAK0B,kB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAWjC,KAAK0B,kB,oBAe7C,WACE,IAAQlB,EAAaR,KAAKJ,MAAlBY,SAER,OAAO0B,uBACL,qBAAKnC,UAAU,UAAUkB,QAASjB,KAAK6B,qBAAvC,SACE,qBAAK9B,UAAU,QAAf,SAAwBS,MAE1Bc,O,GA5BchB,aCOd6B,EAAqB,I,WCPzB,WAAYC,GAAc,oBACxBpC,KAAKqC,KAAO,EACZrC,KAAKoC,YAAcA,E,+CAErB,WAAe,IAAD,OACZ,OAAOE,MAAM,GAAD,OAVd,oEAUc,aACMtC,KAAKoC,YADX,iBAC+BpC,KAAKqC,KADpC,qBARA,GAQA,gBAZJ,uCAcNE,MAAK,SAACC,GACN,GAAIA,EAASC,GAEX,OADA,EAAKJ,MAAQ,EACNG,EAASE,Y,uBAItB,WACE1C,KAAKqC,KAAO,M,MDoGDM,E,4MAzGb1D,MAAQ,CACNyB,OAAQ,GACRkC,SAAS,EACTC,WAAW,EACXC,SAAU,KACVC,aAAa,G,EAGfC,YAAc,WACZ,EAAKxD,UAAS,kBAAoB,CAChCqD,WADY,EAAGA,e,EAKnBI,YAAc,SAAClC,EAAeC,GAC5B,EAAKxB,SAAS,CAAEsD,SAAU,CAAE/B,gBAAeC,UAC3C,EAAKgC,e,EAGPE,kBAAoB,YAAkB,IAAfhE,EAAc,EAAdA,QACrB,EAAKM,UAAS,WACZ,MAAO,CAAEkB,OAAQ,OAGfxB,EAAQiE,QACVhB,EAAmBiB,YACnBjB,EAAmBC,YAAclD,EACjC,EAAKmE,mBAELC,MAAM,yB,EAIVD,gBAAkB,WAEhB,OADA,EAAK7D,SAAS,CAAEoD,SAAS,IAClBT,EACJoB,cACAhB,KAAK,EAAKiB,WACVC,OAAM,SAACC,GACNJ,MAAMI,MAEPC,SAAQ,WACP,EAAKnE,SAAS,CAAEoD,SAAS,IACrBT,EAAmBE,KAAO,GAC5BN,OAAO6B,SAAS,CACdC,IAAKtC,SAASuC,gBAAgBC,aAC9BC,SAAU,e,EAMpBR,UAAY,YAAe,IAAZS,EAAW,EAAXA,KACRA,EAAKC,QACRZ,MAAM,oBAGJW,EAAKC,OAAS,GAChB,EAAK1E,SAAS,CAAEuD,aAAa,IAE7B,EAAKvD,SAAS,CAAEuD,aAAa,IAG/B,EAAKvD,UAAS,SAAC2E,GACb,MAAO,CACLzD,OAAO,GAAD,mBAAMyD,EAAUzD,QAAhB,YAA2BuD,S,4CAKvC,WACE,MAA8DjE,KAAKf,MAA3DyB,EAAR,EAAQA,OAAQmC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,YAAaH,EAAlD,EAAkDA,QAElD,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,CAAWF,SAAUG,KAAKkD,oBACzBxC,EAAOwD,OAAS,GACf,eAAC,IAAMtD,SAAP,WACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAkBF,OAAQA,EAAQC,UAAWX,KAAKiD,gBAEnDF,GAAe,cAAC,EAAD,CAAQ9B,QAASjB,KAAKqD,qBAP5C,IAWGT,GACC,cAAC,IAAD,CACE7C,UAAU,SACVE,KAAK,YACLmE,MAAM,UACNC,OAAQ,IACRC,MAAO,MAjBb,IAqBGzB,GACC,cAAC,EAAD,CAAOjB,QAAS5B,KAAKgD,YAArB,SACG,qBAAK9B,IAAK4B,EAAS/B,cAAeI,IAAK2B,EAAS9B,gB,GAlG3CV,aETlBiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,W","file":"static/js/main.1b7d4052.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Searchbar.scss\";\n\nclass Searchbar extends Component {\n  state = {\n    request: \"\",\n  };\n\n  handleInputChangeEvent = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ request: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"request\"\n            autoComplete=\"off\"\n            onChange={this.handleInputChangeEvent}\n            value={this.state.request}\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import \"./ImageGallery.scss\";\n\nconst ImageGallery = ({ children }) => (\n  <ul className=\"ImageGallery\">{children}</ul>\n);\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ImageGalleryItem.scss\";\nimport uuid from \"react-uuid\";\n\nclass ImageGalleryItem extends Component {\n  render() {\n    const { images, openModal } = this.props;\n    return (\n      <React.Fragment>\n        {images.map(({ webformatURL, largeImageURL, tags }) => (\n          <li key={uuid()} className=\"ImageGalleryItem\">\n            <img\n              onClick={() => openModal(largeImageURL, tags)}\n              src={webformatURL}\n              alt={tags}\n              className=\"ImageGalleryItem-image\"\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nImageGalleryItem.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ImageGalleryItem;\n","import \"./Button.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick }) => (\n  <button onClick={onClick} type=\"button\" className=\"Button \">\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport \"./Modal.scss\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handeleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handeleKeyDown);\n  }\n\n  handeleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  handeleBackDropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handeleBackDropClick}>\n        <div className=\"Modal\">{children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport \"./App.scss\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nimport PicturesApiService from \"./Services/apiService\";\nconst picturesApiService = new PicturesApiService();\n\nclass App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    showModal: false,\n    modalImg: null,\n    loadMoreBtn: true,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onOpenModal = (largeImageURL, tags) => {\n    this.setState({ modalImg: { largeImageURL, tags } });\n    this.toggleModal();\n  };\n\n  formSubmitHandler = ({ request }) => {\n    this.setState(() => {\n      return { images: [] };\n    });\n\n    if (request.trim()) {\n      picturesApiService.resetPage();\n      picturesApiService.searchQuery = request;\n      this.fetchPageImages();\n    } else {\n      alert(\"Enter search request\");\n    }\n  };\n\n  fetchPageImages = () => {\n    this.setState({ loading: true });\n    return picturesApiService\n      .fetchImages()\n      .then(this.addImages)\n      .catch((error) => {\n        alert(error);\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n        if (picturesApiService.page > 2) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      });\n  };\n\n  addImages = ({ hits }) => {\n    if (!hits.length) {\n      alert(\"Try another word\");\n    }\n\n    if (hits.length < 12) {\n      this.setState({ loadMoreBtn: false });\n    } else {\n      this.setState({ loadMoreBtn: true });\n    }\n\n    this.setState((prevState) => {\n      return {\n        images: [...prevState.images, ...hits],\n      };\n    });\n  };\n\n  render() {\n    const { images, showModal, modalImg, loadMoreBtn, loading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.formSubmitHandler} />\n        {images.length > 0 && (\n          <React.Fragment>\n            <ImageGallery>\n              <ImageGalleryItem images={images} openModal={this.onOpenModal} />\n            </ImageGallery>\n            {loadMoreBtn && <Button onClick={this.fetchPageImages} />}\n          </React.Fragment>\n        )}\n        ,\n        {loading && (\n          <Loader\n            className=\"loader\"\n            type=\"ThreeDots\"\n            color=\"#3f51b5\"\n            height={120}\n            width={120}\n          />\n        )}\n        ,\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            {<img src={modalImg.largeImageURL} alt={modalImg.tags} />}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const KEY = \"21935547-b3d05227bb87eef1eed42c097\";\nconst BASE_URL =\n  \"https://pixabay.com/api/?image_type=photo&orientation=horizontal&\";\n\nconst perPage = 12;\n\nexport default class PicturesApiService {\n  constructor(searchQuery) {\n    this.page = 1;\n    this.searchQuery = searchQuery;\n  }\n  fetchImages() {\n    return fetch(\n      `${BASE_URL}q=${this.searchQuery}&page=${this.page}&per_page=${perPage}&key=${KEY}`\n    ).then((response) => {\n      if (response.ok) {\n        this.page += 1;\n        return response.json();\n      }\n    });\n  }\n  resetPage() {\n    this.page = 1;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}